buildscript {
  ext {
    versions = [
        reactor        : '3.2.10.RELEASE',
        mongodb        : '3.10.2',
        mongodbReactive: '1.11.0',
        logback        : '1.2.3',
        // test dependencies:
        testContainers : '1.11.3',
        groovy         : '2.5.5',
        spock          : '1.2-groovy-2.5'
    ]
    notPublishableModules = [
        ':api',
        ':client',
        ':mongo',
        ':tests'
    ]
  }
  repositories {
    mavenCentral()
  }
}

plugins {
  id 'jacoco'
  id 'signing'
  id 'pl.allegro.tech.build.axion-release' version '1.10.1'
  id 'com.github.kt3k.coveralls' version '2.8.4'
  id 'io.codearte.nexus-staging' version '0.21.0' apply false
  id 'com.coditory.integration-test' version '1.0.6' apply false
  id 'de.marcphilipp.nexus-publish' version '0.2.0' apply false
}

description = "Distributed Lock Library for JVM"

scmVersion {
  versionCreator 'versionWithBranch'
}

allprojects {
  group = 'com.coditory.sherlock'
  version = scmVersion.version

  repositories {
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'java-library'
  apply plugin: 'groovy'
  apply plugin: 'jacoco'
  apply plugin: 'com.coditory.integration-test'
  sourceCompatibility = 11

  // make nicer archive names
  archivesBaseName = (rootProject.name + '-' + project.name)
      .replaceAll('-api-', '-')

  repositories {
    mavenCentral()
  }

  dependencies {
    testCompile "ch.qos.logback:logback-core:$versions.logback"
    testCompile "ch.qos.logback:logback-classic:$versions.logback"
    testCompile "org.codehaus.groovy:groovy-all:$versions.groovy"
    testCompile "org.spockframework:spock-core:$versions.spock"
  }

  tasks.withType(Test) {
    testLogging {
      showStandardStreams = true
      exceptionFormat = 'full'
      events = ['passed', 'skipped', 'failed']
    }
  }

  javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    failOnError = false
    options {
      setMemberLevel JavadocMemberLevel.PUBLIC
      setAuthor true
      links "https://docs.oracle.com/javase/8/docs/api/"
    }
  }
}

apply from: "gradle/coverage.gradle"

if (project.hasProperty('mavenCentral')) {
  apply from: "gradle/publish.gradle"
}
